/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista.InternalFrameInventario;

import controlador.Ctrl_RegistrarVenta;
import controlador.VentaPDF;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.DetalleCabecera;
import modelo.DetalleVenta;
import java.sql.PreparedStatement;

/**
 *
 * @author este1
 */
public class InternalNotaDeEntrega extends javax.swing.JInternalFrame {

    //Modelo de los datos
    private DefaultTableModel modeloDatosLibros;

    //DECLARAR LISTA DE LOS PRODUCTOS
    ArrayList<DetalleVenta> listaLibros = new ArrayList<>();
    private DetalleVenta libro;

    //Lista para el detalle de venta de los productos
    //BASE DE DATOS
    private int id_libro = 0;
    private String titulo = "";
    private int stock = 0;
    private int precioU = 0;

    //DETALLE
    private int cantidad = 0;
    private int subtotal = 0;
    private int descuento = 0;
    private int total = 0;

    //TOTAL
    private int subtotalGeneral = 0;
    private int totalGeneral = 0;

    //Numero detalle
    private int auxIdDetalle = 1;

    //idultimoVenta
    private int idDatos = 0;

    //constructor
    public InternalNotaDeEntrega() {
        initComponents();

        this.setSize(new Dimension(800, 700));
        this.setTitle("Nota de Venta");

        //CArgar productos en el COMBO BOX
        this.cargarLibros();

        this.iniTablaLibros();

        //Numero NotaVenta
        this.idDetalleVenta();
        jLabelNumero.setText(String.valueOf(idDatos + 1));

    }

    //PASAR DATOS TABLA 
    private void iniTablaLibros() {
        modeloDatosLibros = new DefaultTableModel();

        //añadir columnbas
        modeloDatosLibros.addColumn("N");
        modeloDatosLibros.addColumn("Titulo");
        modeloDatosLibros.addColumn("Cantidad");
        modeloDatosLibros.addColumn("P. Unit");
        modeloDatosLibros.addColumn("V. Total");

        //agregar los datos del mdoelo a la tabla
        this.jTableLibros.setModel(modeloDatosLibros);
    }

    //METODO PRESENTAR LA INFORMACION EN LA TABLA DETALLEVENTA
    private void listaTabla() {
        this.modeloDatosLibros.setRowCount(listaLibros.size());
        for (int i = 0; i < listaLibros.size(); i++) {
            this.modeloDatosLibros.setValueAt(i + 1, i, 0);
            this.modeloDatosLibros.setValueAt(listaLibros.get(i).getTitulo(), i, 1);
            this.modeloDatosLibros.setValueAt(listaLibros.get(i).getCantidad(), i, 2);
            this.modeloDatosLibros.setValueAt(listaLibros.get(i).getPrecioU(), i, 3);
            this.modeloDatosLibros.setValueAt(listaLibros.get(i).getTotal(), i, 4);
        }
        //AÑADIR AL JTABLE
        jTableLibros.setModel(modeloDatosLibros);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextBuscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextCantidad = new javax.swing.JTextField();
        jComboBoxLibro = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextTotal = new javax.swing.JTextField();
        jTextSubtotal = new javax.swing.JTextField();
        jTextDescuento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabelNumero = new javax.swing.JLabel();
        jTextDireccion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextInstitucion = new javax.swing.JTextField();
        jTextCliente = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextRucCi = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLibros = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jTextTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 80, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel9.setText("VENTA AL POR MAYOR Y MENOR DE LIBROS");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));
        getContentPane().add(jTextBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 100, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Numero:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 80, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Cantidad:");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, 80, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Institución:");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 80, -1));

        jButton1.setBackground(new java.awt.Color(51, 255, 204));
        jButton1.setText("REGISTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 490, 140, 90));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("LECTUM EDICIONES");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Cliente:");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 80, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logo_Pequeño.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -20, 180, 140));
        getContentPane().add(jTextCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 260, 80, -1));

        jComboBoxLibro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLibroActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 110, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Total:");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Subtotal:");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Desc. %:");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 80, -1));
        jPanel2.add(jTextTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 90, -1));
        jPanel2.add(jTextSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 90, -1));

        jTextDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDescuentoActionPerformed(evt);
            }
        });
        jPanel2.add(jTextDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 220, 120));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Telefono:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, 80, -1));
        getContentPane().add(jLabelNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 90, 20));
        getContentPane().add(jTextDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 80, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setText("Telefono: 0999930173");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 55, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Dirección:");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 80, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("NOTA DE ENTREGA");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Libro:");
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 80, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("QUITO - ECUADOR");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, -1, -1));
        getContentPane().add(jTextInstitucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 110, -1));
        getContentPane().add(jTextCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 110, -1));

        jButtonBuscar.setBackground(new java.awt.Color(204, 255, 255));
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, -1, -1));

        jButton4.setBackground(new java.awt.Color(255, 255, 102));
        jButton4.setText("Añadir Producto");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 260, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("RUC/CI:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 80, -1));
        getContentPane().add(jTextRucCi, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 120, 80, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableLibros);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 675, 100));

        jButton3.setBackground(new java.awt.Color(255, 0, 51));
        jButton3.setText("ELIMINAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, -1));

        jButton2.setBackground(new java.awt.Color(0, 255, 102));
        jButton2.setText("EDITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 80, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 700, 150));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 880, -1));

        jLabel_wallpaper.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        DetalleCabecera detalleCabecera = new DetalleCabecera();
        DetalleVenta detalleVenta = new DetalleVenta();
        Ctrl_RegistrarVenta controlVenta = new Ctrl_RegistrarVenta();

        String fechaActual = "";
        Date date = new Date();
        fechaActual = new SimpleDateFormat("yyyy/MM/dd").format(date);

        if (!jTextInstitucion.getText().isEmpty()) {
            if (!jTextCliente.getText().isEmpty()) {
                if (!jTextDireccion.getText().isEmpty()) {
                    if (!jTextRucCi.getText().isEmpty()) {
                        if (!jTextTelefono.getText().isEmpty()) {

                            if (listaLibros.size() > 0) {

                                if (!jTextDescuento.getText().isEmpty()) {

                                    //REGISTRAR cabecera
                                    detalleCabecera.setId_detalleCabecera(0);
                                    detalleCabecera.setInstitucion(jTextInstitucion.getText());
                                    detalleCabecera.setCliente(jTextCliente.getText());
                                    detalleCabecera.setDireccion(jTextDireccion.getText());
                                    detalleCabecera.setRuc_ci(jTextRucCi.getText());
                                    detalleCabecera.setTelefono(Integer.parseInt(jTextTelefono.getText()));
                                    detalleCabecera.setFecha(fechaActual);

                                    if (controlVenta.guardarCabezera(detalleCabecera)) {
                                        //Obtener id del dato guardado
                                        this.idDetalleVenta();
                                        JOptionPane.showMessageDialog(null, "Venta Registrada");

                                        //generar pdfffffffff
                                        VentaPDF pdf = new VentaPDF();

                                        pdf.Datos(idDatos);
                                        pdf.generarPDF();

                                        //GUARDAR DETALLE
                                        for (DetalleVenta elemento : listaLibros) {

                                            detalleVenta.setId_detalleVenta(0);
                                            detalleVenta.setId_detalleCabecera(0);
                                            detalleVenta.setId_libro(elemento.getId_libro());
                                            detalleVenta.setCantidad(elemento.getCantidad());
                                            detalleVenta.setPrecioU(elemento.getPrecioU());
                                            detalleVenta.setSubtotal(elemento.getSubtotal());
                                            detalleVenta.setDescuento(Integer.parseInt(jTextDescuento.getText()));
                                            detalleVenta.setTotal(Integer.parseInt(jTextTotal.getText()));

                                            if (controlVenta.guardarDetalle(detalleVenta)) {

                                                //System.out.println("SE HA REGISTRADO LA VENTA");
                                                //RESETEAR CAMPOS
                                                jTextInstitucion.setText("");
                                                jTextCliente.setText("");
                                                jTextDireccion.setText("");
                                                jTextRucCi.setText("");
                                                jTextTelefono.setText("");
                                                jTextSubtotal.setText("");
                                                jTextDescuento.setText("");
                                                jTextTotal.setText("");

                                                this.RestarStock(elemento.getId_libro(), elemento.getCantidad());

                                            } else {
                                                JOptionPane.showMessageDialog(null, "Error al guardar detalle");
                                            }

                                        }
                                        //LIMPIAR LISTA
                                        listaLibros.clear();
                                        listaTabla();

                                    } else {

                                        JOptionPane.showMessageDialog(null, "Error al guardar cabezera");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Ingrese el descuento");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Agrege un producto");
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "Llene el campo de telefono");
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Llene el campo de Ruc/Ci");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Llene el campo de direccion");

                }

            } else {
                JOptionPane.showMessageDialog(null, "Llene el cliente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "LLENE LA INSTITUCION");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLibroActionPerformed
        //cargar libros 


    }//GEN-LAST:event_jComboBoxLibroActionPerformed

    //BOTON BUSCAR
    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed

        String pBuscar = jTextBuscar.getText().trim();
        Connection cn = conexion.Conexion.conectar();
        String sql = "select titulo from lista_libros where titulo = '" + pBuscar + "'";
        Statement st;

        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                jComboBoxLibro.setSelectedItem(rs.getString("titulo"));

            } else {

                jComboBoxLibro.setSelectedItem("Seleccione Libro:");
                JOptionPane.showMessageDialog(null, "Titulo no encontrado");

            }
            jTextBuscar.setText("");
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al buscar el titulo" + e);
        }


    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String combo = this.jComboBoxLibro.getSelectedItem().toString();

        //valdiar que se haya serlecicoando producto 
        if (combo.equalsIgnoreCase("Seleccione Libro:")) {
            JOptionPane.showMessageDialog(null, "Seleccione un Prodcuto");
        } else {

            //VALIDAR QUE INGRESE CANTIDAD
            if (!jTextCantidad.getText().isEmpty()) {

                // VALIDAR QUE NO INGRESE CARACTERES
                boolean validacion = validar(jTextCantidad.getText());
                if (validacion == true) {

                    if (Integer.parseInt(jTextCantidad.getText()) > 0) {

                        cantidad = Integer.parseInt(jTextCantidad.getText());

                        //OBTENER DATOS DEL PRODUCTO
                        this.DatosDelProducto();

                        //LA CANTIDAD SELECCIONADA NO SEA MAYOR A LA BASE DE DATOS
                        if (cantidad <= stock) {
                            subtotal = precioU * cantidad;
                            total = subtotal - descuento;

                            //SE CREA UN  NUEVO PRODUCTO
                            libro = new DetalleVenta(auxIdDetalle,
                                    1,
                                    id_libro,
                                    titulo,
                                    Integer.parseInt(jTextCantidad.getText()),
                                    precioU,
                                    subtotal,
                                    descuento,
                                    total
                            );

                            //AÑADIR A LA LISTA
                            listaLibros.add(libro);
                            JOptionPane.showMessageDialog(null, "Producto Agregado");
                            auxIdDetalle++;
                            jTextCantidad.setText("");//limpiar campo
                            //VOLVER A CARGAR COMBO PRODCUTO
                            this.cargarLibros();
                            this.calcularTotal();

                        } else {
                            JOptionPane.showMessageDialog(null, "La cantidad supera stock actual: " + stock);
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "La cantidad debe ser mayor a 0");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "En cantidad solo se permiten numeros");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Ingrese Cantidad de producto");
            }

        }
        //LLAMAR METODO

        this.listaTabla();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDescuentoActionPerformed
        this.Descuento();


    }//GEN-LAST:event_jTextDescuentoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.Eliminar();


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.Actualizar();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JComboBox<String> jComboBoxLibro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelNumero;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTable jTableLibros;
    private javax.swing.JTextField jTextBuscar;
    private javax.swing.JTextField jTextCantidad;
    private javax.swing.JTextField jTextCliente;
    public static javax.swing.JTextField jTextDescuento;
    private javax.swing.JTextField jTextDireccion;
    private javax.swing.JTextField jTextInstitucion;
    private javax.swing.JTextField jTextRucCi;
    private javax.swing.JTextField jTextSubtotal;
    private javax.swing.JTextField jTextTelefono;
    public static javax.swing.JTextField jTextTotal;
    // End of variables declaration//GEN-END:variables

    //obtener id del ultimo detalle de cabezera registrada
    private void idDetalleVenta() {

        try {
            Connection cn = conexion.Conexion.conectar();
            String sql = "SELECT * FROM cabeceraventa ORDER BY id_detalleCabecera DESC LIMIT 1";
            Statement st;
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                idDatos = rs.getInt("id_detalleCabecera");
            }

        } catch (SQLException e) {
            System.out.println("Error al cargar Id" + e);
        }

    }

    //CARGARLOSPRODICTOS EN EL COMBO BOX
    private void cargarLibros() {
        String sql = "select * from lista_libros";
        Statement st;
        Connection cn = conexion.Conexion.conectar();

        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBoxLibro.removeAllItems();
            jComboBoxLibro.addItem("Seleccione Libro:");
            while (rs.next()) {
                jComboBoxLibro.addItem(rs.getString("titulo"));
            }

            cn.close();

        } catch (SQLException e) {

            System.out.println("Error al cargar productos" + e);

        }
    }

    //METODO VALIDAR NO CARACTERES 
    private boolean validar(String valor) {
        try {
            int num = Integer.parseInt(valor);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    //MOSTRAR LOS PRODUCTOS
    private void DatosDelProducto() {

        try {
            String sql = "select * from lista_libros where titulo = '" + this.jComboBoxLibro.getSelectedItem() + "'";
            Connection cn = conexion.Conexion.conectar();
            Statement st;
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                id_libro = rs.getInt("id_libro");
                titulo = rs.getString("titulo");
                stock = rs.getInt("stock");
                precioU = rs.getInt("precioU");

            }

        } catch (SQLException e) {
            System.out.println("Error al obtener datos del producto" + e);
        }
    }
    //METODO CALCULAR TOTAL A PAGAR

    private void calcularTotal() {

        subtotalGeneral = 0;
        totalGeneral = 0;

        for (DetalleVenta elemento : listaLibros) {
            subtotalGeneral += elemento.getSubtotal();
            totalGeneral += elemento.getTotal();
        }

        jTextSubtotal.setText(String.valueOf(subtotalGeneral));
        jTextTotal.setText(String.valueOf(totalGeneral));

    }
    
    
     //Ectualizar tabla de tabla
     private void Actualizar(){
         
         //EN PROCESO
   }
    
   //Eliminar de tabla
    
    private void Eliminar(){
        int idArray =0;
        int selectedRowIndex = jTableLibros.getSelectedRow();

        // If a row is selected
        if (selectedRowIndex != -1) {
        idArray = (int )modeloDatosLibros.getValueAt(selectedRowIndex, 0);
        }
        int option=JOptionPane.showConfirmDialog(null, "Esta Seguro de eliminar este libro?");

        switch (option) {
            case 0://Si
                listaLibros.remove(idArray-1);
                this.calcularTotal();
                this.listaTabla();
                break;  
            case 1://No          
                break;
            default:
                break;
        }
    }
    
    // Descuento
    private void Descuento() {

        int valorDescuento;
        int valorActual;
        int totalDescuento;

        if (jTextDescuento.getText().equals("")) {
            jTextTotal.setText(jTextSubtotal.getText());
        } else {
            valorActual = Integer.parseInt(jTextSubtotal.getText());
            valorDescuento = Integer.parseInt(jTextDescuento.getText());
            totalDescuento = valorActual - (valorActual) * valorDescuento / 100;
            jTextTotal.setText(String.valueOf(totalDescuento));
        }

    }

    //RESTAR STOCK
    private void RestarStock(int id, int cantidad) {

        int stock = 0;

        try {
            Connection cn = conexion.Conexion.conectar();
            String sql = "select id_libro, stock from lista_libros where id_libro = '" + id + "'";
            Statement st;
            st = cn.createStatement();

            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                stock = rs.getInt("stock");

            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al restar stock 1" + e);
        }
        try {
            Connection cn = conexion.Conexion.conectar();
            PreparedStatement consulta = cn.prepareStatement("update lista_libros set stock=? where id_libro='" + id + "'");
            int stockNueva = stock - cantidad;
            consulta.setInt(1, stockNueva);
            if (consulta.executeUpdate() > 0) {
                System.out.println("Se actulizo");

            }
            cn.close();
        } catch (SQLException e) {

            System.out.println("Error al restar stock 2" + e);
        }
    }

}
